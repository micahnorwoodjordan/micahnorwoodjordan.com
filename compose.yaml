services:
  api:
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}

    build:
      dockerfile: Dockerfile
      context: ./api.micahnorwoodjordan.com
      args:
        DATABASE_CONNECTION_STRING: ${DATABASE_CONNECTION_STRING}
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
        SERVER_PORT: ${SERVER_PORT}
        SMTP_USERNAME: ${SMTP_USERNAME}
        SMTP_PASSWORD: ${SMTP_PASSWORD}

      
    volumes:
      - ./api.micahnorwoodjordan.com:/srv/api
      
    environment:
      DOCKER_DEPLOYMENT_METHOD: ${DOCKER_DEPLOYMENT_METHOD}
      DATABASE_CONNECTION_STRING: ${DATABASE_CONNECTION_STRING}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SERVER_PORT: ${SERVER_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    command: 
      - /bin/bash
      - -c
      - |
        if [ "$DOCKER_DEPLOYMENT_METHOD" = "build" ]; then
        echo "RUNNING APPLICATION AS JAR";
        ./mvnw clean package && java -jar /srv/api/target/api.micahnorwoodjordan.com-build.jar;
        else
          echo "RUNNING APPLICATION IN WATCH MODE";
          ./mvnw spring-boot:run;
        fi
