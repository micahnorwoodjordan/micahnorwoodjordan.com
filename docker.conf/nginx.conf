events {}

http {
  log_format main '[$remote_addr] [$time_local] [$request] - $status - [$http_user_agent]';

  access_log /var/log/nginx/access.log main;

  server {
    listen 80;
    server_name 192.168.0.136;

    location ~ /api {
        rewrite ^/api/(.*)$ /$1 break;  # strip the `/api` prefix
        proxy_pass http://api:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location / {
        proxy_pass http://ui:4200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        # ------------------------------------------------------------------------
        # Angular communicates over Websockets to utilize hot-reloads
        # so in order to take advantage of hot-reloads while within the docker compose stack
        # nginx needs to forward WebSocket upgrade headers
        # this allows nginx to correctly handle the WebSocket handshake and forward it to the ui container
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        # ------------------------------------------------------------------------
    }

    location ~ /ui {
        proxy_pass http://ui:4200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location ~ /static {
      rewrite ^/static/(.*)$ /$1 break;
        proxy_pass http://static;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
  }
}
